C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE KS0108
OBJECT MODULE PLACED IN ks0108.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe ks0108.c DB OE BR

line level    source

   1          #include "c8051F020.h"
   2          #include <intrins.h>
   3          #define LCD_DATA P2
   4          #define LCD_RS P30
   5          #define LCD_RW P31
   6          #define LCD_E  P32
   7          #define LCD_CS1  P33
   8          #define LCD_CS2  P34
   9          #define LCD_RST  P35
  10          sbit    HD7279_DAT=P1^7;
  11          sbit    HD7279_CLK=P1^6;
  12          #define NOSELECT7279    P5 |= 0x80              //SPICS4(P57)=1
  13          #define SELECT7279      P5 &= ~(0x80)   //SPICS4(P57)=0;
  14          #define Set7279DAT      HD7279_DAT=1
  15          #define Clr7279DAT      HD7279_DAT=0
  16          #define Set7279CLK      HD7279_CLK=1
  17          #define Clr7279CLK      HD7279_CLK=0
  18          void Delay1ms(unsigned char);
  19          void Delay1s(unsigned char);
  20          
  21          
  22          
  23          /*--  宽度x高度=128x64  计算器菜单--*/
  24          char code calcMenu[]={
  25          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x8C,0xF0,0x00,0x00,0x00,0x00,
  26          0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0xF8,0x40,0x40,0x40,0x00,0x00,
  27          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xFC,
  28          0x44,0x44,0x44,0xB8,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x40,0x40,0x40,
  29          0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  30          0x00,0x00,0xF0,0x08,0x04,0x04,0x04,0x0C,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,
  31          0x00,0x00,0x00,0x00,0x08,0x10,0xA0,0x40,0xA0,0x10,0x08,0x00,0x00,0x00,0x00,0x00,
  32          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  33          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x07,0x04,0x00,0x04,0x07,0x04,0x00,0x00,
  34          0x00,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,
  35          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0xC7,
  36          0x44,0x44,0x44,0xC3,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
  37          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  38          0x00,0x00,0x41,0xC2,0x44,0x44,0x44,0xC2,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,
  39          0x00,0x00,0x20,0x40,0x02,0xC1,0x40,0x40,0x40,0x21,0x22,0x20,0x00,0x00,0x00,0xC0,
  40          0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  41          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0x01,0x01,0x82,0x7C,0x00,0x00,0x00,
  42          0x00,0xCC,0xCC,0x00,0x00,0x00,0x10,0x10,0x10,0xD6,0xD6,0x10,0x10,0x10,0x00,0x00,
  43          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x7F,
  44          0x44,0x44,0x4E,0x60,0x00,0x00,0x00,0x00,0x33,0x33,0x00,0x00,0x00,0x0A,0x0A,0x0A,
  45          0x0A,0x0A,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  46          0x00,0x00,0x40,0x7F,0x44,0x04,0x0E,0x00,0x00,0x00,0x00,0x00,0x33,0x33,0x00,0x00,
  47          0x00,0x02,0x82,0x7E,0xC0,0x3F,0x01,0x45,0x29,0x11,0x29,0x47,0x00,0x00,0x00,0xFF,
  48          0x80,0x80,0x9E,0x92,0x92,0x9E,0x80,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
  50          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  51          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  52          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  53          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  54          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  55          0x00,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 2   

  56          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  57          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  58          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  59          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  60          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  61          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  62          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  64          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  66          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  67          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  68          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  69          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  71          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  72          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  74          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  75          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  76          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  79          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  80          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  81          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  82          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  83          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  85          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  86          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  87          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  88          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
  89          
  90          
  91          
  92          /*--  宽度x高度=128x64  图片方式--*/
  93          char code screen3[]={
  94          /*--  调入了一幅图像：  --*/
  95          /*--  宽度x高度=128x64  --*/
  96          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x40,0x00,0x20,0x00,0x00,0x10,
  97          0x30,0x00,0x20,0x00,0x10,0x0A,0x00,0x00,0x02,0x28,0x40,0x00,0x10,0x14,0x00,0x00,
  98          0x00,0x10,0xC0,0x10,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x10,
 100          0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x00,0x00,0x10,0x10,
 101          0x00,0x00,0x00,0x20,0x20,0x00,0x00,0x40,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,
 102          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x08,0x00,
 103          0x02,0x40,0x00,0x0C,0x3B,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 104          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x90,0x58,0xA7,0xA1,0x00,0x80,0x00,0x40,0x00,
 105          0x80,0x70,0x00,0x40,0x40,0x00,0x00,0x00,0x40,0x00,0x80,0x20,0x40,0x00,0x20,0x04,
 106          0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x10,0x00,0x00,0x10,0x00,0x00,
 108          0x00,0x60,0x00,0x00,0x40,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x10,0x00,0x00,0x10,
 109          0x20,0x00,0x02,0x08,0x00,0x02,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 110          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x00,0x24,0x40,
 111          0x04,0x00,0x10,0x00,0x04,0x00,0x41,0x31,0x01,0x03,0x41,0x07,0x01,0x08,0x04,0x00,
 112          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x00,0x00,0x80,0x04,
 113          0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x40,0x00,
 114          0x00,0x00,0x02,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 115          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 117          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 3   

 118          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 119          0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x08,0x00,0x04,0x00,0x00,0x4C,0x01,0x00,0x00,
 120          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,
 121          0x00,0x00,0x00,0x00,0x10,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,
 122          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x40,0x00,0x40,
 123          0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 124          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0x40,
 125          0x00,0x20,0x40,0x40,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 126          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 127          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 128          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 129          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 130          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6A,0x80,0x82,0x00,0x90,0x00,0x82,
 131          0x00,0x80,0xA8,0x16,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 132          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x42,0x00,0x00,0x80,0x80,0x14,0x90,
 133          0x90,0x10,0x04,0x80,0x00,0x01,0x4A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 135          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 136          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 137          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 138          0x00,0x00,0x40,0x00,0x00,0x10,0x00,0x00,0x04,0x01,0x00,0x80,0x08,0x00,0x00,0x00,
 139          0x48,0x01,0x02,0x28,0x00,0x30,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 140          0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x20,0x00,0x18,0x00,0x05,0x9C,0x00,0x00,
 141          0x00,0x00,0x00,0x10,0x04,0x03,0x0C,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
 142          0x00,0x00,0xC0,0x3A,0xA0,0x20,0x00,0xAB,0x20,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,
 143          0x80,0x00,0x80,0x00,0x00,0x40,0x00,0x80,0x00,0x80,0x68,0x00,0x00,0x00,0x00,0x00,
 144          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 145          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 146          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x01,0x00,0x00,0x00,0x00,
 147          0x02,0x50,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 148          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x34,0x01,0x01,
 149          0x01,0x00,0x5B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 150          0x00,0x00,0x0D,0x00,0x08,0x0A,0x00,0x08,0x00,0x1A,0x01,0x90,0x20,0x21,0x01,0xB0,
 151          0x00,0x00,0x20,0x00,0x00,0x10,0xB0,0x10,0x07,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
 152          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 153          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 154          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 155          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 156          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 157          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 158          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,0x0C,
 159          0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,
 160          
 161          };
 162          
 163          
 164          /*
 165          char code shu[]={
 166          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 167          0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 168          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 169          0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 170          0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 171          0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 172          0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 173          0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 174          0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 175          0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 176          0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 177          0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 178          0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 179          0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 4   

 180          0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 181          0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 182          0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 183          0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 184          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 185          0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
 186          
 187          
 188          char code fu[]={
 189          0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 190          0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 191          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 192          0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 193          0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 194          0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 195          0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 196          0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 197          0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 198          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
 199          
 200          */
 201          
 202          
 203          char code fu[]={
 204          /*--  文字:  ＋  --*/
 205          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 206          0x00,0x00,0x80,0x80,0x80,0x80,0x80,0xFC,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,
 207          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 208          
 209          /*--  文字:  －  --*/
 210          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 211          0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,
 212          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 213          
 214          /*--  文字:  ×  --*/
 215          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 216          0x00,0x00,0x00,0x08,0x10,0x20,0x40,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x00,0x00,
 217          0x00,0x00,0x00,0x08,0x04,0x02,0x01,0x00,0x01,0x02,0x04,0x08,0x00,0x00,0x00,0x00,
 218          
 219          /*--  文字:  ÷  --*/
 220          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 221          0x00,0x00,0x80,0x80,0x80,0x80,0x98,0x98,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,
 222          0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 223          
 224          /*--  文字:  ＝  --*/
 225          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 226          0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,0x00,
 227          0x00,0x00,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x00,0x00,0x00,
 228          };
 229          char code Kong[]={
 230          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 231          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 232          };
 233          
 234          
 235          
 236          
 237          char code Jian[]={
 238          /*--  文字:  -  --*/
 239          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 240          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
 241          };
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 5   

 242          
 243          
 244          
 245          /*--  宽度x高度=128x64  主菜单内容--*/
 246          char code screen4[]={
 247          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 248          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 249          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x88,0x88,0x88,0x8A,0xFC,0x88,
 250          0x88,0x88,0x8C,0x08,0x00,0x04,0x34,0x54,0x9E,0x14,0xF4,0x1E,0x94,0x74,0x14,0x04,
 251          0x00,0x00,0x00,0xF8,0xAA,0xAC,0xF8,0xAC,0xAA,0xA8,0xF8,0x00,0x00,0x00,0x00,0x00,
 252          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 253          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 254          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 255          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 256          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 257          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x0F,0x08,
 258          0x08,0x08,0x08,0x08,0x00,0x09,0x09,0x05,0x03,0x01,0x0F,0x01,0x03,0x05,0x09,0x09,
 259          0x00,0x02,0x02,0x02,0x02,0x02,0x0F,0x02,0x02,0x02,0x02,0x02,0x00,0x00,0x00,0x00,
 260          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 261          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 262          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 263          0x00,0x00,0x20,0xF0,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x10,0x10,0x10,
 264          0xF0,0x14,0x18,0x10,0xF0,0x10,0x18,0x10,0x00,0x10,0x18,0x28,0x28,0x28,0xAC,0x68,
 265          0x28,0x28,0x08,0x18,0x00,0x10,0x10,0x10,0x10,0xF0,0x54,0x58,0x50,0xD0,0x18,0x10,
 266          0x00,0x90,0x90,0x90,0x90,0x90,0x90,0xFC,0x10,0x14,0x18,0x10,0x00,0x00,0x00,0x00,
 267          0x00,0x00,0x00,0x60,0x10,0x10,0x90,0x60,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,
 268          0xFC,0x24,0x14,0xBC,0x54,0xB4,0x14,0x04,0x04,0xFC,0x00,0x00,0x00,0xFC,0x20,0x20,
 269          0x20,0x3C,0x20,0x20,0x20,0x20,0x00,0x10,0x10,0x10,0x10,0xF0,0x54,0x58,0x50,0xD0,
 270          0x18,0x10,0x00,0x90,0x90,0x90,0x90,0x90,0x90,0xFC,0x10,0x14,0x18,0x10,0x00,0x00,
 271          0x00,0x00,0x08,0x0F,0x08,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x10,0x10,0xD0,
 272          0x88,0x8B,0x84,0x8B,0xC8,0x90,0x90,0x90,0x00,0x01,0x01,0xC1,0x51,0x51,0x5F,0x41,
 273          0x41,0xC1,0x01,0x01,0x00,0x10,0x90,0x88,0x86,0x81,0xD0,0x50,0x50,0x4F,0xC0,0x00,
 274          0x00,0x10,0x10,0x90,0xCF,0x88,0xC8,0x81,0x86,0x88,0x90,0x1C,0x00,0x00,0x00,0x00,
 275          0x00,0x00,0x00,0x0C,0x0A,0x09,0x08,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,
 276          0xDF,0x51,0x51,0xD4,0x15,0x1A,0x11,0x11,0x10,0xDF,0x00,0x10,0x08,0x07,0xE1,0x81,
 277          0x81,0x81,0x1F,0x00,0x00,0xE0,0x00,0x10,0x10,0x08,0x06,0x01,0x10,0x10,0x10,0x0F,
 278          0x00,0x00,0x00,0x10,0x10,0x10,0x0F,0x08,0x08,0x01,0x06,0x08,0x10,0x1C,0x00,0x00,
 279          0x00,0x42,0x81,0x89,0x89,0x76,0x00,0x00,0x00,0x84,0x00,0x00,0x00,0x08,0xFE,0x01,
 280          0x00,0xEA,0xAA,0xAA,0xAA,0xAA,0xEA,0x00,0x00,0x08,0x08,0x0B,0x3A,0x2A,0x2A,0x2A,
 281          0x2A,0xEB,0x08,0x08,0x00,0x08,0x89,0x4A,0x28,0x18,0xFD,0x18,0x2A,0x49,0x88,0x08,
 282          0x00,0x22,0x21,0xBF,0x6A,0x2A,0xFF,0x2A,0x6A,0xAA,0x2A,0x20,0x00,0x00,0x00,0x00,
 283          0x00,0x00,0x00,0x10,0x2C,0x22,0xFF,0xA0,0x00,0x00,0x00,0x84,0x00,0x00,0x00,0x00,
 284          0xFF,0x44,0x44,0xFF,0x00,0x01,0x09,0x31,0x01,0xFF,0x01,0x00,0x00,0x11,0x12,0xFE,
 285          0x92,0x52,0x00,0x3F,0x11,0xFF,0x11,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 286          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 287          0x00,0xF0,0x90,0x90,0x90,0x10,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x01,0x40,
 288          0x44,0xC9,0x00,0x80,0x80,0x80,0xFD,0x80,0x80,0x80,0x00,0x00,0x10,0x0C,0xE9,0xB9,
 289          0xA9,0xA0,0xB0,0xAC,0xE8,0x19,0x08,0x00,0x00,0x80,0x9D,0x94,0x94,0x9C,0xE0,0x9D,
 290          0x94,0xB5,0xDD,0x80,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,
 291          0x00,0x00,0x00,0xE0,0x10,0x10,0x10,0xE0,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x10,
 292          0x10,0x10,0x10,0x14,0xF8,0x10,0x10,0x11,0x19,0x11,0x00,0x08,0x68,0xA8,0x3C,0x29,
 293          0xE8,0x3C,0x28,0xE8,0x28,0x09,0x00,0x00,0x00,0xF0,0x54,0x58,0xF0,0x58,0x54,0x50,
 294          0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 295          0x00,0x0D,0x10,0x10,0x10,0x0F,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
 296          0x00,0x1F,0x08,0x04,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x2F,0x1A,
 297          0x0A,0x0A,0x0A,0x3A,0x0F,0x08,0x08,0x00,0x00,0x04,0x3C,0x2A,0x2A,0x39,0x00,0x39,
 298          0x2A,0x2A,0x3C,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 299          0x00,0x00,0x00,0x07,0x08,0x08,0x08,0x07,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x10,
 300          0x11,0x11,0x11,0x11,0x1F,0x11,0x11,0x11,0x11,0x10,0x00,0x12,0x12,0x0A,0x07,0x02,
 301          0x1F,0x02,0x07,0x0A,0x12,0x12,0x00,0x04,0x04,0x05,0x05,0x05,0x1F,0x05,0x05,0x05,
 302          0x05,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 303          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 6   

 304          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 305          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 306          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 307          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 308          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 309          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 310          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 311          
 312          };
 313          
 314          
 315          /*--  宽度x高度=128x64  秒表的修改日期--*/
 316          char code miaobiaoModify[]={
 317          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 318          0x00,0x00,0x00,0x40,0xF0,0x0C,0xE0,0x40,0x50,0x2C,0x28,0xA8,0x58,0x40,0x00,0x00,
 319          0x88,0x88,0x88,0xF8,0x80,0x40,0xBC,0x20,0x20,0xE0,0x20,0x00,0x00,0xF8,0x88,0x88,
 320          0xF8,0x00,0x20,0x20,0x20,0x20,0xFC,0x20,0x00,0x00,0x20,0x5C,0xD0,0x50,0x50,0x00,
 321          0xE0,0x20,0xFC,0x20,0xE0,0x00,0x00,0xF8,0x88,0x88,0xF8,0x00,0x20,0x20,0x20,0x20,
 322          0xFC,0x20,0x00,0x00,0x00,0xE4,0x08,0xE0,0x24,0x24,0x24,0x24,0xE4,0x04,0xFC,0x00,
 323          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 324          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 325          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 326          0x00,0x00,0x00,0x00,0x3F,0x00,0x0F,0x20,0x2A,0x2A,0x25,0x14,0x12,0x08,0x00,0x00,
 327          0x3F,0x10,0x08,0x04,0x20,0x10,0x0B,0x04,0x0A,0x11,0x20,0x00,0x00,0x1F,0x08,0x08,
 328          0x1F,0x00,0x00,0x01,0x26,0x20,0x3F,0x00,0x00,0x00,0x02,0x02,0x3F,0x12,0x0A,0x00,
 329          0x07,0x02,0x3F,0x02,0x07,0x00,0x00,0x1F,0x08,0x08,0x1F,0x00,0x00,0x01,0x26,0x20,
 330          0x3F,0x00,0x00,0x00,0x00,0x3F,0x00,0x0F,0x09,0x09,0x09,0x09,0x2F,0x20,0x3F,0x00,
 331          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 332          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 333          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 334          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 335          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 336          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 337          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 338          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 339          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 340          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 341          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 342          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 343          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 344          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 345          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 346          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 347          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 348          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 349          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 350          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 351          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 352          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 353          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 354          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 355          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 356          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 357          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 358          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 359          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 360          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 361          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 362          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 363          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 364          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 365          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 7   

 366          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 367          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 368          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 369          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 370          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 371          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 372          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 373          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 374          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 375          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 376          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 377          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 378          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 379          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 380          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 381          
 382          };
 383          
 384          
 385          
 386          /*--  宽度x高度=128x64  秒表的菜单--*/
 387          char code miaobiaoCaidan[]={
 388          0x00,0x00,0x08,0xFC,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x20,0x22,0x22,
 389          0xFE,0x22,0x22,0x22,0xFE,0x22,0x23,0x22,0x00,0x84,0xFC,0x07,0xFC,0x04,0x18,0xD4,
 390          0x53,0x50,0x54,0xD8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x84,0x44,0x24,
 391          0x18,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x22,0x2E,0xDB,0x7E,0x4A,0x60,0x5E,0x4A,
 392          0x4A,0xF9,0x09,0x00,0x10,0xFC,0x03,0x62,0xBA,0xAA,0xAB,0xAA,0xAA,0xBA,0x62,0x00,
 393          0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x04,0x24,0x24,0xD8,0x00,0x00,0x00,0x10,0x00,
 394          0x00,0x00,0x09,0xD2,0x20,0x22,0xEA,0xAA,0xBF,0xAA,0xAA,0xEA,0x22,0x00,0x8C,0x95,
 395          0x55,0xD5,0xA5,0xDF,0xA5,0xD5,0x55,0x95,0x8C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 396          0x00,0x00,0x82,0xE3,0x02,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x80,0xE2,
 397          0x19,0xC0,0x80,0xA0,0x5B,0x50,0x50,0xB0,0x80,0x00,0x02,0x11,0x11,0x12,0xF0,0x03,
 398          0x82,0x7A,0x42,0x43,0xC0,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x02,0x02,0x02,
 399          0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x07,0x05,0x05,0x05,0x85,0x45,
 400          0x45,0x47,0x80,0x00,0x00,0x07,0x00,0x00,0x00,0x04,0x44,0x47,0x40,0x40,0x50,0xE0,
 401          0x40,0x40,0x40,0x60,0x40,0x00,0x21,0xA2,0xA2,0xF2,0xA1,0xA0,0xF0,0xA0,0xA2,0xA0,
 402          0x20,0x00,0x01,0x07,0xC0,0x50,0x67,0xC2,0x62,0x52,0x42,0xC7,0x00,0x00,0x00,0x00,
 403          0x00,0x02,0x02,0x02,0x06,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 404          0x0C,0x0B,0x28,0x3F,0x28,0x00,0x00,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,
 405          0x00,0x1F,0x40,0x54,0x54,0x4A,0x29,0x24,0x10,0x00,0x00,0x7F,0x21,0x11,0x09,0x41,
 406          0x20,0x17,0x08,0x14,0x23,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 407          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,
 408          0x20,0x20,0x1F,0x00,0x00,0x00,0x21,0x00,0x00,0x00,0x40,0x44,0x44,0x44,0x44,0x7F,
 409          0x44,0x44,0x44,0x44,0x40,0x00,0x48,0x49,0x2A,0x1C,0x08,0x7F,0x08,0x1C,0x2B,0x48,
 410          0x48,0x00,0x10,0x10,0x17,0x15,0x15,0x7F,0x15,0x15,0x15,0x17,0x10,0x00,0x00,0x00,
 411          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 412          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 413          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 414          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 415          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 416          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 417          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 418          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 419          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 420          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 421          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 422          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 423          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 424          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 425          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 426          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 427          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 8   

 428          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 429          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 430          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 431          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 432          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 433          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 434          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 435          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 436          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 437          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 438          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 439          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 440          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 441          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 442          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 443          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 444          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 445          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 446          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 447          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 448          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 449          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 450          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 451          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 452          };
 453          
 454          /*--  宽度x高度=128x64  温度--*/
 455          char code tem[]={
 456          0x00,0x00,0x10,0xF8,0x00,0x00,0x00,0x10,0x00,0x00,0x44,0x88,0x00,0x80,0xBE,0xAA,
 457          0xAA,0xAA,0xBE,0x80,0x00,0x00,0x00,0x00,0xFC,0x14,0x14,0x7C,0x54,0x56,0x54,0x7C,
 458          0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,
 459          0x08,0x08,0x88,0x70,0x00,0x00,0x10,0x00,0x00,0xF8,0x48,0x48,0x48,0xFE,0x48,0x48,
 460          0x48,0xF8,0x00,0x00,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,
 461          0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x88,0x88,0x70,0x00,
 462          0x00,0x10,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,0x04,0x00,
 463          0x00,0x10,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x00,0x00,
 464          0x00,0x00,0x08,0x0F,0x08,0x00,0x00,0x02,0x00,0x00,0x08,0x04,0x12,0x1F,0x10,0x1F,
 465          0x10,0x1F,0x10,0x1F,0x10,0x00,0x00,0x10,0x0F,0x00,0x11,0x13,0x15,0x09,0x09,0x15,
 466          0x13,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,
 467          0x0A,0x09,0x08,0x0C,0x00,0x00,0x02,0x00,0x00,0x07,0x02,0x02,0x02,0x0F,0x12,0x12,
 468          0x12,0x13,0x10,0x1C,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,
 469          0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x08,0x08,0x08,0x07,0x00,
 470          0x00,0x02,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,0x10,0x00,
 471          0x00,0x10,0x08,0x04,0x03,0x00,0x00,0x10,0x10,0x10,0x0F,0x00,0x00,0x00,0x00,0x00,
 472          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 473          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 474          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 475          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 476          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 477          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 480          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 481          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 482          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 484          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 485          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 488          0x00,0x89,0x72,0x00,0xC0,0x5F,0xD5,0x55,0xD5,0x55,0xDF,0x00,0x00,0x00,0xFE,0x0A,
 489          0x8A,0xBE,0xAA,0xAB,0xAA,0xBE,0x0A,0x0A,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 9   

 490          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 491          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 492          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 493          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 494          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 495          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 496          0x00,0x07,0x00,0x04,0x07,0x04,0x07,0x04,0x07,0x04,0x07,0x04,0x00,0x06,0x01,0x04,
 497          0x04,0x04,0x03,0x02,0x03,0x04,0x04,0x04,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
 498          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 499          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 500          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 501          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 502          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 503          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 504          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 505          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 506          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 507          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 508          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 509          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 510          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 511          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 512          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 513          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 514          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 515          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 516          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 517          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 518          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 519          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 520          
 521          };
 522          /*--  宽度x高度=128x64  电压--*/
 523          char code volte[]={
 524          0x00,0x00,0x10,0xF8,0x00,0x00,0x00,0x10,0x00,0x00,0x44,0x88,0x00,0x80,0xBE,0xAA,
 525          0xAA,0xAA,0xBE,0x80,0x00,0x00,0x00,0x00,0xFC,0x14,0x14,0x7C,0x54,0x56,0x54,0x7C,
 526          0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,
 527          0x08,0x08,0x88,0x70,0x00,0x00,0x10,0x00,0x00,0xF8,0x48,0x48,0x48,0xFE,0x48,0x48,
 528          0x48,0xF8,0x00,0x00,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,
 529          0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x88,0x88,0x70,0x00,
 530          0x00,0x10,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,0x04,0x00,
 531          0x00,0x10,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x00,0x00,
 532          0x00,0x00,0x08,0x0F,0x08,0x00,0x00,0x02,0x00,0x00,0x08,0x04,0x12,0x1F,0x10,0x1F,
 533          0x10,0x1F,0x10,0x1F,0x10,0x00,0x00,0x10,0x0F,0x00,0x11,0x13,0x15,0x09,0x09,0x15,
 534          0x13,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,
 535          0x0A,0x09,0x08,0x0C,0x00,0x00,0x02,0x00,0x00,0x07,0x02,0x02,0x02,0x0F,0x12,0x12,
 536          0x12,0x13,0x10,0x1C,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,
 537          0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x08,0x08,0x08,0x07,0x00,
 538          0x00,0x02,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,0x10,0x00,
 539          0x00,0x10,0x08,0x04,0x03,0x00,0x00,0x10,0x10,0x10,0x0F,0x00,0x00,0x00,0x00,0x00,
 540          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 541          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 542          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 543          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 544          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 545          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 546          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 547          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 548          0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 549          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 550          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 551          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 10  

 552          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 553          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 554          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 555          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 556          0xFE,0x92,0x92,0x92,0xFF,0x92,0x92,0x92,0xFE,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,
 557          0x21,0x21,0x21,0xFD,0x21,0xA1,0x21,0x01,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,
 558          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 559          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 560          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 561          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 562          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 563          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 564          0x01,0x00,0x00,0x00,0x03,0x04,0x04,0x04,0x04,0x04,0x07,0x00,0x00,0x04,0x03,0x04,
 565          0x04,0x04,0x04,0x07,0x04,0x04,0x05,0x04,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
 566          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 567          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 568          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 569          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 570          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 571          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 572          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 573          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 574          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 575          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 576          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 577          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 578          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 579          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 580          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 581          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 582          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 583          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 584          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 585          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 586          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 587          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 588          
 589          };
 590          /*--  宽度x高度=128x64  压力--*/
 591          char code pres[]={
 592          0x00,0x00,0x10,0xF8,0x00,0x00,0x00,0x10,0x00,0x00,0x44,0x88,0x00,0x80,0xBE,0xAA,
 593          0xAA,0xAA,0xBE,0x80,0x00,0x00,0x00,0x00,0xFC,0x14,0x14,0x7C,0x54,0x56,0x54,0x7C,
 594          0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,
 595          0x08,0x08,0x88,0x70,0x00,0x00,0x10,0x00,0x00,0xF8,0x48,0x48,0x48,0xFE,0x48,0x48,
 596          0x48,0xF8,0x00,0x00,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,
 597          0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x88,0x88,0x70,0x00,
 598          0x00,0x10,0x00,0x00,0x00,0xFC,0x04,0x84,0x84,0x84,0xF4,0x84,0x84,0x84,0x04,0x00,
 599          0x00,0x10,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x00,0x00,
 600          0x00,0x00,0x08,0x0F,0x08,0x00,0x00,0x02,0x00,0x00,0x08,0x04,0x12,0x1F,0x10,0x1F,
 601          0x10,0x1F,0x10,0x1F,0x10,0x00,0x00,0x10,0x0F,0x00,0x11,0x13,0x15,0x09,0x09,0x15,
 602          0x13,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,
 603          0x0A,0x09,0x08,0x0C,0x00,0x00,0x02,0x00,0x00,0x07,0x02,0x02,0x02,0x0F,0x12,0x12,
 604          0x12,0x13,0x10,0x1C,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,
 605          0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x08,0x08,0x08,0x07,0x00,
 606          0x00,0x02,0x00,0x00,0x10,0x0F,0x10,0x10,0x10,0x10,0x1F,0x10,0x12,0x14,0x10,0x00,
 607          0x00,0x10,0x08,0x04,0x03,0x00,0x00,0x10,0x10,0x10,0x0F,0x00,0x00,0x00,0x00,0x00,
 608          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 609          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 610          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 611          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 612          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 613          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 11  

 614          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 615          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 616          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 617          0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 618          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 619          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 620          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 621          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 622          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 623          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 624          0x00,0xFF,0x01,0x21,0x21,0x21,0xFD,0x21,0xA1,0x21,0x01,0x00,0x00,0x04,0x04,0x04,
 625          0xC4,0x3F,0x04,0x04,0x04,0x04,0xFC,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,
 626          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 627          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 628          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 629          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 630          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 631          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 632          0x04,0x03,0x04,0x04,0x04,0x04,0x07,0x04,0x04,0x05,0x04,0x00,0x00,0x04,0x02,0x01,
 633          0x00,0x00,0x00,0x04,0x04,0x04,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
 634          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 635          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 636          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 637          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 638          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 639          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 640          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 641          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 642          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 643          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 644          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 645          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 646          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 647          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 648          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 649          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 650          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 651          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 652          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 653          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 654          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 655          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 656          
 657          };
 658          
 659          /*--  文字:  江  --*/
 660          char code Jiang[]=
 661          {
 662          0x10,0x60,0x01,0xC6,0x30,0x00,0x04,0x04,0x04,0xFC,0x04,0x04,0x04,0x04,0x00,0x00,
 663          0x04,0x04,0x7E,0x01,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x00,
 664          };
 665          /*--  文字:  苏  --*/
 666          char code Su[]=
 667          {
 668          0x04,0x04,0x44,0x44,0x44,0x5F,0x44,0xF4,0x44,0x5F,0x44,0xC4,0x04,0x04,0x04,0x00,
 669          0x00,0x40,0x4C,0x27,0x10,0x0C,0x07,0x01,0x20,0x40,0x40,0x3F,0x00,0x02,0x0C,0x00,
 670          };
 671          /*--  文字:  大  --*/
 672          char code Da[]=
 673          {
 674          0x20,0x20,0x20,0x20,0x20,0x20,0xA0,0x7F,0xA0,0x20,0x20,0x20,0x20,0x20,0x20,0x00,
 675          0x00,0x80,0x40,0x20,0x10,0x0C,0x03,0x00,0x01,0x06,0x08,0x30,0x60,0xC0,0x40,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 12  

 676          };
 677          /*--  文字:  学  --*/
 678          char code Xue[]=
 679          {
 680          0x40,0x30,0x10,0x12,0x5C,0x54,0x50,0x51,0x5E,0xD4,0x50,0x18,0x57,0x32,0x10,0x00,
 681          0x00,0x02,0x02,0x02,0x02,0x02,0x42,0x82,0x7F,0x02,0x02,0x02,0x02,0x02,0x02,0x00,
 682          };
 683          /*--  文字:  计  --*/
 684          char code Ji[]=
 685          {
 686          0x20,0x21,0x2E,0xE4,0x00,0x00,0x20,0x20,0x20,0x20,0xFF,0x20,0x20,0x20,0x20,0x00,
 687          0x00,0x00,0x00,0x7F,0x20,0x10,0x08,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,
 688          };
 689          /*--  文字:  算  --*/
 690          char code Suan[]=
 691          {
 692          0x08,0x07,0xFA,0xAA,0xAE,0xAA,0xAA,0xA8,0xAC,0xAB,0xAA,0xFE,0x0A,0x02,0x02,0x00,
 693          0x08,0x08,0x8B,0x6A,0x1E,0x0A,0x0A,0x0A,0x0A,0xFE,0x0A,0x0B,0x08,0x08,0x08,0x00,
 694          };
 695          /*--  文字:  机  --*/
 696          char code Jii[]=
 697          {
 698          0x08,0x08,0xC8,0xFF,0x48,0x88,0x08,0x00,0xFE,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,
 699          0x04,0x03,0x00,0xFF,0x00,0x41,0x30,0x0C,0x03,0x00,0x00,0x00,0x3F,0x40,0x78,0x00,
 700          };
 701          
 702          /*--  文字:  院  --*/
 703          char code Yuan[]=
 704          {
 705          0xFE,0x02,0x32,0x4A,0x86,0x0C,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0x0C,0x04,0x00,
 706          0xFF,0x00,0x02,0x04,0x83,0x41,0x31,0x0F,0x01,0x01,0x7F,0x81,0x81,0x81,0xF1,0x00,
 707          };
 708          
 709          /*--  文字:  年  --*/
 710          char code Nian[]=
 711          {
 712          0x40,0x20,0x10,0x0C,0xE3,0x22,0x22,0x22,0xFE,0x22,0x22,0x22,0x22,0x02,0x00,0x00,
 713          0x04,0x04,0x04,0x04,0x07,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x00,
 714          };
 715          
 716          /*--  文字:  月  --*/
 717          char code Yue[]=
 718          {
 719          0x00,0x00,0x00,0xFE,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0xFE,0x00,0x00,0x00,
 720          0x80,0x40,0x30,0x0F,0x02,0x02,0x02,0x02,0x02,0x02,0x42,0x82,0x7F,0x00,0x00,0x00,
 721          };
 722          
 723          
 724          /*--  文字:  日  --*/
 725          char code Ri[]=
 726          {
 727          0x00,0x00,0x00,0xFE,0x82,0x82,0x82,0x82,0x82,0x82,0x82,0xFE,0x00,0x00,0x00,0x00,
 728          0x00,0x00,0x00,0xFF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0xFF,0x00,0x00,0x00,0x00,
 729          };
 730          
 731          
 732          
 733          /*--  文字:  单  --*/
 734          char code Dan[]=
 735          {
 736          0x00,0x00,0xF8,0x28,0x29,0x2E,0x2A,0xF8,0x28,0x2C,0x2B,0x2A,0xF8,0x00,0x00,0x00,
 737          0x08,0x08,0x0B,0x09,0x09,0x09,0x09,0xFF,0x09,0x09,0x09,0x09,0x0B,0x08,0x08,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 13  

 738          };
 739          /*--  文字:  片  --*/
 740          char code Pian[]=
 741          {
 742          0x00,0x00,0x00,0xFE,0x10,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x18,0x10,0x00,
 743          0x80,0x40,0x30,0x0F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,0x00,0x00,0x00,0x00,
 744          };
 745          
 746          /*--  文字:  课  --*/
 747          char code Ke[]=
 748          {
 749          0x20,0x21,0xEE,0x04,0x00,0x00,0x00,0x7E,0x4A,0x4A,0xFE,0x4A,0x4A,0x7E,0x00,0x00,
 750          0x00,0x00,0x3F,0x10,0x08,0x21,0x11,0x09,0x05,0x03,0xFF,0x05,0x09,0x31,0x11,0x00,
 751          };
 752          /*--  文字:  程  --*/
 753          char code Cheng[]=
 754          {
 755          0x10,0x12,0xD2,0xFE,0x91,0x11,0x80,0xBF,0xA1,0xA1,0xA1,0xA1,0xBF,0x80,0x00,0x00,
 756          0x04,0x03,0x00,0xFF,0x00,0x41,0x44,0x44,0x44,0x7F,0x44,0x44,0x44,0x44,0x40,0x00,
 757          };
 758          /*--  文字:  设  --*/
 759          char code She[]=
 760          {
 761          0x40,0x41,0xCE,0x04,0x00,0x80,0x40,0xBE,0x82,0x82,0x82,0xBE,0xC0,0x40,0x40,0x00,
 762          0x00,0x00,0x7F,0x20,0x90,0x80,0x40,0x43,0x2C,0x10,0x10,0x2C,0x43,0xC0,0x40,0x00,
 763          };
 764          /*--  文字:  序  --*/
 765          char code Xu[]=
 766          {
 767          0x00,0x00,0xFC,0x04,0x04,0x14,0x14,0x35,0x56,0x94,0x54,0x34,0x14,0x04,0x04,0x00,
 768          0x80,0x60,0x1F,0x00,0x01,0x01,0x01,0x41,0x81,0x7F,0x01,0x01,0x01,0x03,0x01,0x00,
 769          };
 770          /*--  文字:  液  --*/
 771          char code Ye[]=
 772          {
 773          0x10,0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,0x00,
 774          0x04,0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,0x00,
 775          };
 776          /*--  文字:  晶  --*/
 777          char code Jing[]=
 778          {
 779          0x00,0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,0x00,
 780          0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,
 781          };
 782          /*--  文字:  点  --*/
 783          char code Dian[]=
 784          {
 785          0x00,0x00,0x00,0xE0,0x20,0x20,0x20,0x3F,0x24,0x24,0x24,0xF4,0x24,0x00,0x00,0x00,
 786          0x00,0x40,0x30,0x07,0x12,0x62,0x02,0x0A,0x12,0x62,0x02,0x0F,0x10,0x60,0x00,0x00,
 787          };
 788          /*--  文字:  阵  --*/
 789          char code Zhen[]=
 790          {
 791          0xFE,0x02,0x12,0x2A,0xC6,0x88,0xC8,0xB8,0x8F,0xE8,0x88,0x88,0x88,0x88,0x00,0x00,
 792          0xFF,0x00,0x02,0x04,0x03,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x00,
 793          };
 794          /*--  文字:  显  --*/
 795          char code Xian[]=
 796          {
 797          0x00,0x00,0x00,0x3E,0x2A,0xEA,0x2A,0x2A,0x2A,0xEA,0x2A,0x3E,0x00,0x00,0x00,0x00,
 798          0x20,0x21,0x22,0x2C,0x20,0x3F,0x20,0x20,0x20,0x3F,0x28,0x24,0x23,0x20,0x20,0x00,
 799          };
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 14  

 800          /*--  文字:  示  --*/
 801          char code Shi[]=
 802          {
 803          0x00,0x20,0x20,0x22,0x22,0x22,0x22,0xE2,0x22,0x22,0x22,0x22,0x22,0x20,0x20,0x00,
 804          0x10,0x08,0x04,0x03,0x00,0x40,0x80,0x7F,0x00,0x00,0x01,0x02,0x0C,0x18,0x00,0x00,
 805          };
 806          /*--  文字:  屏  --*/
 807          char code Ping[]=
 808          {
 809          0x00,0x00,0xFF,0x09,0x49,0x59,0xE9,0x49,0x49,0x49,0xE9,0x59,0x49,0x4F,0x00,0x00,
 810          0x40,0x30,0x0F,0x82,0x42,0x32,0x0F,0x02,0x02,0x02,0xFF,0x02,0x02,0x02,0x02,0x00,
 811          };
 812          /*--  文字:  姓  --*/
 813          char code Xing[]=
 814          {
 815          0x10,0x90,0x7F,0x12,0x10,0xF0,0x40,0x3C,0x10,0x10,0xFF,0x10,0x10,0x10,0x10,0x00,
 816          0x40,0x21,0x1A,0x04,0x0B,0x30,0x40,0x42,0x42,0x42,0x7F,0x42,0x42,0x42,0x40,0x00,
 817          };
 818          /*--  文字:  名  --*/
 819          char code Ming[]=
 820          {
 821          0x00,0x40,0x20,0x10,0x08,0x27,0x44,0x84,0x44,0x24,0x14,0x0C,0x04,0x00,0x00,0x00,
 822          0x04,0x04,0x04,0x02,0x7E,0x23,0x23,0x22,0x22,0x22,0x22,0x22,0x7E,0x00,0x00,0x00,
 823          };
 824          /*--  文字:  班  --*/
 825          char code Ban[]=
 826          {
 827          0x42,0x42,0xFE,0x42,0x42,0xE0,0x00,0xFF,0x00,0x42,0x42,0xFE,0x42,0x42,0x42,0x00,
 828          0x10,0x10,0x0F,0x88,0x49,0x20,0x18,0x07,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x00,
 829          };
 830          /*--  文字:  级  --*/
 831          char code Jiii[]=
 832          {
 833          0x20,0x30,0xAC,0x63,0x20,0x18,0x02,0x82,0x7E,0x82,0x42,0x72,0x4E,0xC0,0x40,0x00,
 834          0x10,0x13,0x11,0x49,0x29,0x91,0x8C,0x43,0x40,0x23,0x14,0x18,0x66,0xC1,0x40,0x00,
 835          };
 836          /*--  文字:  号  --*/
 837          char code Hao[]=
 838          {
 839          0x40,0x40,0x40,0x5F,0xD1,0x51,0x51,0x51,0x51,0x51,0x51,0x5F,0x40,0x40,0x40,0x00,
 840          0x00,0x00,0x00,0x02,0x07,0x02,0x02,0x22,0x42,0x82,0x42,0x3E,0x00,0x00,0x00,0x00,
 841          };
 842          /*--  文字:  曾  --*/
 843          char code Zeng[]=
 844          {
 845          0x00,0x00,0xF8,0x88,0x99,0xEA,0x8C,0xF8,0x88,0xCC,0xAB,0x99,0x88,0xF8,0x00,0x00,
 846          0x00,0x00,0x00,0x00,0xFE,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0xFE,0x00,0x00,0x00,0x00,
 847          };
 848          /*--  文字:  海  --
 849          char code Hai[]=
 850          {
 851          0x10,0x60,0x01,0xF6,0x00,0x10,0xF8,0x17,0x34,0x54,0x14,0x14,0xF4,0x04,0x04,0x00,
 852          0x04,0x04,0xFF,0x00,0x01,0x01,0x1F,0x11,0x13,0x15,0x51,0x91,0x7F,0x11,0x11,0x00,
 853          };
 854          
 855          */
 856          
 857          
 858          /*--  文字:  彪  --*/
 859          char code Biao[]=
 860          {
 861          0x00,0xF8,0x48,0x48,0xFF,0x2A,0x2A,0x8A,0x1A,0x20,0x10,0x88,0x6C,0x47,0x02,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 15  

 862          0xC0,0x3F,0x80,0x60,0x1C,0x05,0x05,0x3D,0x40,0x42,0x51,0x48,0x44,0x43,0x72,0x00,
 863          
 864          };
 865          /*--  文字:  0  --*/
 866          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 867          char code Zero[]=
 868          {
 869          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,
 870          };
 871          /*--  文字:  1  --*/
 872          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 873          char code One[]=
 874          {
 875          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 876          };
 877          /*--  文字:  2  --*/
 878          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 879          char code Two[]=
 880          {
 881          0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,
 882          };
 883          /*--  文字:  3  --*/
 884          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 885          char code Three[]=
 886          {
 887          0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,
 888          };
 889          /*--  文字:  4  --*/
 890          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 891          char code Four[]=
 892          {
 893          0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,
 894          };
 895          /*--  文字:  5  --*/
 896          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 897          char code Five[]=
 898          {
 899          0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,
 900          };
 901          /*--  文字:  6  --*/
 902          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 903          char code Six[]=
 904          {
 905          0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,
 906          };
 907          /*--  文字:  7  --*/
 908          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 909          char code Seven[]=
 910          {
 911          0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,
 912          };
 913          /*--  文字:  8  --*/
 914          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 915          char code Eight[]=
 916          {
 917          0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,
 918          };
 919          /*--  文字:  9  --*/
 920          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 921          char code Nine[]=
 922          {
 923          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 16  

 924          };
 925          
 926          /*--  文字:  :  --*/
 927          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 928          char code Maohao[]=
 929          {
 930          0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,
 931          };
 932          
 933          char code Line[]=
 934          {
 935          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 936          };
 937          
 938          
 939          
 940          char code led0[]={
 941          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,
 942          };
 943          char code led1[]={
 944          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 945          };
 946          char code led2[]={
 947          0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,
 948          };
 949          char code led3[]={
 950          0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,
 951          };
 952          char code led4[]={
 953          0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,
 954          };
 955          char code led5[]={
 956          0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,
 957          };
 958          char code led6[]={
 959          0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,
 960          };
 961          char code led7[]={
 962          0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,
 963          };
 964          char code led8[]={
 965          0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,
 966          };
 967          char code led9[]={
 968          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,
 969          };
 970          char code led[]={
 971          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 972          };
 973          char code du[]={
 974          0x00,0x00,0xFC,0x04,0x24,0x24,0xFC,0xA5,0xA6,0xA4,0xFC,0x24,0x24,0x24,0x04,0x00,
 975          0x80,0x60,0x1F,0x80,0x80,0x42,0x46,0x2A,0x12,0x12,0x2A,0x26,0x42,0xC0,0x40,0x00,
 976          };
 977          char code dianya[]={
 978          0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,
 979          };
 980          char code yali[]={
 981          0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,
 982          };
 983          char code Dot[]={
 984          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,
 985          };
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 17  

 986          #define SELECTCS 0
 987          void LCD_WaitReady1(void) //判断LCD控制芯片KS0108是否忙
 988          {
 989   1              LCD_DATA=0xff;
 990   1              _nop_();
 991   1              LCD_CS2=SELECTCS;
 992   1              LCD_RW=1;
 993   1              LCD_RS=0;
 994   1              LCD_E=1;
 995   1      //      while (LCD_DATA&0x80);
 996   1              LCD_CS2=!SELECTCS;
 997   1      }
 998          void LCD_WaitReady2(void) //判断LCD控制芯片KS0108是否忙
 999          {
1000   1              LCD_DATA=0xff;
1001   1              _nop_();
1002   1              LCD_CS1=SELECTCS;
1003   1              LCD_RW=1;
1004   1              LCD_RS=0;
1005   1              LCD_E=1;
1006   1              while (LCD_DATA&0x80);
1007   1              LCD_CS1=!SELECTCS;
1008   1      }
1009          void LCD_WriteCommand1(char ch) //向LCD控制芯片KS0108发送控制命令
1010          {
1011   1              LCD_WaitReady1();
1012   1              LCD_CS2=SELECTCS;
1013   1              LCD_RW=0;
1014   1              LCD_RS=0;
1015   1              LCD_DATA=ch;
1016   1              LCD_E=1;
1017   1              LCD_E=0;
1018   1              LCD_CS2=!SELECTCS;
1019   1      }
1020          void LCD_WriteCommand2(char ch) //向LCD控制芯片KS0108发送控制命令
1021          {
1022   1              LCD_WaitReady2();
1023   1              LCD_CS1=SELECTCS;
1024   1              LCD_RW=0;
1025   1              LCD_RS=0;
1026   1              LCD_DATA=ch;
1027   1              LCD_E=1;
1028   1              LCD_E=0;
1029   1              LCD_CS1=!SELECTCS;
1030   1      }
1031          void LCD_WriteData1(char ch)    //向LCD控制芯片KS0108发送数据命令
1032          {
1033   1              LCD_WaitReady1();
1034   1              LCD_CS2=SELECTCS;
1035   1              LCD_RW=0;
1036   1              LCD_RS=1;
1037   1              LCD_DATA=ch;
1038   1              LCD_E=1;
1039   1              LCD_E=0;
1040   1              LCD_CS2=!SELECTCS;
1041   1      }
1042          void LCD_WriteData2(char ch)    //向LCD控制芯片KS0108发送数据命令
1043          {
1044   1              LCD_WaitReady2();
1045   1              LCD_CS1=SELECTCS;
1046   1              LCD_RW=0;
1047   1              LCD_RS=1;
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 18  

1048   1              LCD_DATA=ch;
1049   1              LCD_E=1;
1050   1              LCD_E=0;
1051   1              LCD_CS1=!SELECTCS;
1052   1      }
1053          
1054          
1055          
1056          void LCD_WriteHZ(char x,char y,char *Dot) //显示16*16点阵汉字
1057          {
1058   1      char i;
1059   1              for (i=0;i<32;i++)
1060   1              {
1061   2                      if ((x+i%16)<64)
1062   2                      {
1063   3                              LCD_WriteCommand1(0xB8+y+i/16);
1064   3                              LCD_WriteCommand1(0x40+x+i%16);
1065   3                              LCD_WriteData1(Dot[i]);
1066   3                      }
1067   2                      else if ((x+i%16)<128)
1068   2                      {
1069   3                              LCD_WriteCommand2(0xB8+y+i/16);
1070   3                              LCD_WriteCommand2(0x40+x-64+i%16);
1071   3                              LCD_WriteData2(Dot[i]);
1072   3                      }
1073   2                      else 
1074   2                      {
1075   3                              LCD_WriteCommand1(0xB8+y+i/16);
1076   3                              LCD_WriteCommand1(0x40+x-128+i%16);
1077   3                              LCD_WriteData1(Dot[i]);
1078   3                      }
1079   2              }
1080   1      }
1081          
1082          void LCD_WriteSZ(char x,char y,char *Dot) //显示16*8点阵数字
1083          {
1084   1      char i;
1085   1              for (i=0;i<16;i++)
1086   1              {
1087   2                      if ((x+i%8)<64)
1088   2                      {
1089   3                              LCD_WriteCommand1(0xB8+y+i/8);
1090   3                              LCD_WriteCommand1(0x40+x+i%8);
1091   3                              LCD_WriteData1(Dot[i]);
1092   3                      }
1093   2                      else if ((x+i%8)<128)
1094   2                      {
1095   3                              LCD_WriteCommand2(0xB8+y+i/8);
1096   3                              LCD_WriteCommand2(0x40+x-64+i%8);
1097   3                              LCD_WriteData2(Dot[i]);
1098   3                      }
1099   2                      else
1100   2                  {
1101   3                              LCD_WriteCommand1(0xB8+y+i/8);
1102   3                              LCD_WriteCommand1(0x40+x-128+i%8);
1103   3                              LCD_WriteData1(Dot[i]);
1104   3                      }
1105   2              }
1106   1      }
1107          void WriteSZ(char x, char y, char z)
1108          {
1109   1           switch (z)
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 19  

1110   1          {  
1111   2              case 0:
1112   2                            LCD_WriteSZ(x,y,Zero);
1113   2                                break;
1114   2              case 1:
1115   2                                LCD_WriteSZ(x,y,One);
1116   2                                break;
1117   2              case 2:
1118   2                                 LCD_WriteSZ(x,y,Two);
1119   2                                  break;
1120   2              case 3:
1121   2                            LCD_WriteSZ(x,y,Three);
1122   2                                break;
1123   2          case 4:
1124   2                            LCD_WriteSZ(x,y,Four);
1125   2                                break;
1126   2              case 5:
1127   2                            LCD_WriteSZ(x,y,Five);
1128   2                                break;
1129   2              case 6:
1130   2                            LCD_WriteSZ(x,y,Six);
1131   2                                break;
1132   2              case 7:
1133   2                      LCD_WriteSZ(x,y,Seven);
1134   2                                break;
1135   2              case 8:
1136   2                            LCD_WriteSZ(x,y,Eight);
1137   2                                break;
1138   2              case 9:
1139   2                            LCD_WriteSZ(x,y,Nine);                      
1140   2         }
1141   1      }
1142          
1143          void WriteSZ2(char x, char y, char z)
1144          {
1145   1           switch (z)
1146   1          {         
1147   2              case 1:
1148   2                                LCD_WriteSZ(x,y,One);
1149   2                                break;
1150   2              case 2:
1151   2                                 LCD_WriteSZ(x,y,Two);
1152   2                                  break;
1153   2              case 3:
1154   2                            LCD_WriteSZ(x,y,Three);
1155   2                                break;
1156   2          case 4:
1157   2                            LCD_WriteSZ(x,y,Four);
1158   2                                break;
1159   2              case 5:
1160   2                            LCD_WriteSZ(x,y,Five);
1161   2                                break;
1162   2              case 6:
1163   2                            LCD_WriteSZ(x,y,Six);
1164   2                                break;
1165   2              case 7:
1166   2                      LCD_WriteSZ(x,y,Seven);
1167   2                                break;
1168   2              case 8:
1169   2                            LCD_WriteSZ(x,y,Eight);
1170   2                                break;
1171   2              case 9:
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 20  

1172   2                            LCD_WriteSZ(x,y,Nine);                      
1173   2         }
1174   1      }
1175          
1176          void InitLCD(void)              //初始化LCD
1177          {
1178   1              char i,j;
1179   1              LCD_RST=0;
1180   1              Delay1ms(1);
1181   1              LCD_RST=1;
1182   1          LCD_WriteCommand1(0xc0);    
1183   1              LCD_WriteCommand2(0xc0);
1184   1              LCD_WriteCommand1(0x3f);        //开显示
1185   1              LCD_WriteCommand2(0x3f);
1186   1      for (j=0;j<8;j++)                       //清屏
1187   1              {
1188   2                      LCD_WriteCommand1(0xB8+j);      //清左半屏
1189   2                      LCD_WriteCommand1(0x40);
1190   2                      for (i=0;i<64;i++)
1191   2                      LCD_WriteData1(0x00);
1192   2              LCD_WriteCommand2(0xB8+j);      //清右半屏
1193   2                      LCD_WriteCommand2(0x40);
1194   2                      for (i=0;i<64;i++)
1195   2                      LCD_WriteData2(0x00);
1196   2              }
1197   1      }
1198          void DispBmp(char *buf) //显示一幅位图
1199          {
1200   1      int i,j;
1201   1              for (j=0;j<8;j++)                       //显示位图
1202   1              {
1203   2                      LCD_WriteCommand1(0xB8+j);      
1204   2                      LCD_WriteCommand1(0x40);
1205   2                      for (i=0;i<64;i++)
1206   2                              LCD_WriteData1(buf[(j*2)*64+i]);
1207   2                      LCD_WriteCommand2(0xB8+j);      
1208   2                      LCD_WriteCommand2(0x40);
1209   2                      for (i=0;i<64;i++)
1210   2                              LCD_WriteData2(buf[(j*2+1)*64+i]);
1211   2              }
1212   1      }
1213          void Left(char *buf)//图片左移
1214          {
1215   1         int i, j, k;
1216   1         for (k = 0; k < 128; ++k)
1217   1         {
1218   2             for (j = 0; j < 8; ++j)
1219   2                 {
1220   3                      LCD_WriteCommand1(0xB8+j);      
1221   3                      LCD_WriteCommand1(0x40);
1222   3                      for (i=0;i<64;i++)
1223   3                                  LCD_WriteData1(buf[(j*2)*64+(i+k)%128]);
1224   3                  LCD_WriteCommand2(0xB8+j);  
1225   3                      LCD_WriteCommand2(0x40);
1226   3                      for (i=0;i<64;i++)
1227   3                                  LCD_WriteData2(buf[(j*2)*64+(i+k+64)%128]);
1228   3             }
1229   2                  Delay1ms(300);
1230   2         }
1231   1      }
1232          
1233          void Right(char *buf)//图片右移
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 21  

1234          {
1235   1         int i, j, k;
1236   1         for (k = 0; k < 128; ++k)
1237   1         {
1238   2             for (j = 0; j < 8; ++j)
1239   2                 {
1240   3                      LCD_WriteCommand1(0xB8+j);      
1241   3                      LCD_WriteCommand1(0x40);
1242   3                      for (i=0;i<64;i++)
1243   3                                  LCD_WriteData1(buf[(j*2)*64+(i+128-k)%128]);
1244   3                  LCD_WriteCommand2(0xB8+j);  
1245   3                      LCD_WriteCommand2(0x40);
1246   3                      for (i=0;i<64;i++)
1247   3                                  LCD_WriteData2(buf[(j*2)*64+(i+128+64-k)%128]);
1248   3             }
1249   2                  Delay1ms(300);
1250   2         }
1251   1      }
1252          
1253          void Delay1s(unsigned char T);
1254          void Up(char *buf)//图片上移
1255          {
1256   1         int i, j, k;
1257   1         for (k = 0; k < 9; ++k)
1258   1         {     
1259   2             for (j = 0; j < 8; ++j)
1260   2                 {
1261   3                      LCD_WriteCommand1(0xB8+j);      
1262   3                      LCD_WriteCommand1(0x40);
1263   3                      for (i=0;i<64;i++)
1264   3                                  LCD_WriteData1(buf[((j*2)*64+(i+k*128))%1024]);
1265   3                  LCD_WriteCommand2(0xB8+j);  
1266   3                      LCD_WriteCommand2(0x40);
1267   3                      for (i=0;i<64;i++)
1268   3                                  LCD_WriteData2(buf[((j*2+1)*64+(i+k*128))%1024]);
1269   3             }
1270   2                 Delay1ms(500);
1271   2         }
1272   1      }
1273          
1274          void Down(char *buf)//图片下移
1275          {
1276   1         int i, j, k;
1277   1         for (k = 0; k < 9; ++k)
1278   1         {   
1279   2             for (j = 0; j < 8; ++j)
1280   2                 {
1281   3                      LCD_WriteCommand1(0xB8+j);      
1282   3                      LCD_WriteCommand1(0x40);
1283   3                      for (i=0;i<64;i++)
1284   3                                  LCD_WriteData1(buf[((j*2)*64+i+1024-k*128)%1024]);
1285   3                  LCD_WriteCommand2(0xB8+j);  
1286   3                      LCD_WriteCommand2(0x40);
1287   3                      for (i=0;i<64;i++)
1288   3                                  LCD_WriteData2(buf[((j*2+1)*64+i+ 1024-k*128)%1024]);
1289   3             }
1290   2                 Delay1ms(500);
1291   2         }
1292   1      }
1293          
1294          void DispBmp1(char *buf,int n,int m)    //显示一幅位图//128*16,n为页值，m为列值
1295          {
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 22  

1296   1      int i,j;
1297   1      for (j=0;j<2;j++)                       //显示位图
1298   1              {
1299   2              if(m<=63)
1300   2              {
1301   3                  LCD_WriteCommand1(0xB8+j+n);        
1302   3                      LCD_WriteCommand1(0x40);
1303   3                      for(i=128-m;i<=127;i++)
1304   3                          LCD_WriteData1(buf[i+128*j]);
1305   3                      for(i=0;i<=63-m;i++)
1306   3                          LCD_WriteData1(buf[i+128*j]);
1307   3                      LCD_WriteCommand2(0xB8+j+n);    
1308   3                      LCD_WriteCommand2(0x40);
1309   3                      for(i=64-m;i<=127-m;i++)        
1310   3                              LCD_WriteData2(buf[128*j+i]);
1311   3                      }
1312   2              else
1313   2                      { 
1314   3                  LCD_WriteCommand2(0xB8+j+n);        
1315   3                      LCD_WriteCommand2(0x40);
1316   3                      for(i=192-m;i<=127;i++)
1317   3                              LCD_WriteData2(buf[128*j+i]);
1318   3                      for(i=0;i<=127-m;i++)
1319   3                      LCD_WriteData2(buf[128*j+i]);
1320   3                      LCD_WriteCommand1(0xB8+j+n);    
1321   3                      LCD_WriteCommand1(0x40);
1322   3                      for(i=128-m;i<=191-m;i++)
1323   3                              LCD_WriteData1(buf[i+128*j]);
1324   3                      }
1325   2      }
1326   1      }
1327          void Display (char *DispBuf,char ShowDot,char x,char y)  //液晶屏显示温度、电压，压力值
1328          {
1329   1              char i,ch,j=-16;
1330   1              ShowDot--;
1331   1              for (i=2;i<6;i++)
1332   1              {
1333   2                      j+=16;
1334   2                      ch=DispBuf[i];
1335   2                      switch(ch)
1336   2                      {       case 0:  LCD_WriteSZ(x+j,y,led0);   break;
1337   3                  case 1:  LCD_WriteSZ(x+j,y,led1);  break;
1338   3                              case 2:  LCD_WriteSZ(x+j,y,led2);  break;
1339   3                              case 3:  LCD_WriteSZ(x+j,y,led3);  break;
1340   3                              case 4:  LCD_WriteSZ(x+j,y,led4);  break;
1341   3                              case 5:  LCD_WriteSZ(x+j,y,led5);  break;
1342   3                              case 6:  LCD_WriteSZ(x+j,y,led6);  break;
1343   3                              case 7:  LCD_WriteSZ(x+j,y,led7);  break;
1344   3                              case 8:  LCD_WriteSZ(x+j,y,led8);  break;
1345   3                              case 9:  LCD_WriteSZ(x+j,y,led9);  break;
1346   3                              default:  LCD_WriteSZ(x+j,y,led);  break;
1347   3                              }
1348   2                      if(i==ShowDot)
1349   2                      {
1350   3                              LCD_WriteSZ(x+j+8,y,Dot);
1351   3                      }
1352   2              }
1353   1      }
1354          unsigned int GetADCValue(char No);
1355          char GetKeyValue(void);
1356          void WaitKeyOff(void);
1357          void menulcd ()            //显示菜单
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 23  

1358          {
1359   1              InitLCD();
1360   1              DispBmp(screen4);
1361   1      }
1362          void TestLCD()
1363          {
1364   1          char i;
1365   1              InitLCD();              //显示江苏大学计算机学院
1366   1              LCD_WriteHZ(31,2,Jiang); 
1367   1              LCD_WriteHZ(47,2,Su); 
1368   1          LCD_WriteHZ(64,2,Da); 
1369   1              LCD_WriteHZ(80,2,Xue); 
1370   1              LCD_WriteHZ(24,4,Ji); 
1371   1              LCD_WriteHZ(40,4,Suan); 
1372   1              LCD_WriteHZ(56,4,Jii); 
1373   1              LCD_WriteHZ(72,4,Xue); 
1374   1              LCD_WriteHZ(88,4,Yuan); 
1375   1          Delay1s(3);
1376   1              
1377   1              for (i=0;i<64;i++)
1378   1              {
1379   2                      Delay1ms(50);
1380   2                      LCD_WriteCommand1(0xc0+i%64);   //设置起始行,实现向上滚动
1381   2                      LCD_WriteCommand2(0xc0+i%64);
1382   2              }
1383   1              Delay1s(3);
1384   1        
1385   1              for (i = 0; i < 2; ++i)
1386   1              {
1387   2              InitLCD();                 //显示2016年单片机课程设计
1388   2              LCD_WriteSZ(40,2,Two);
1389   2              LCD_WriteSZ(48,2,Zero);
1390   2              LCD_WriteSZ(56,2,One);
1391   2              LCD_WriteSZ(64,2,Six);
1392   2              LCD_WriteHZ(72,2,Nian);
1393   2              LCD_WriteHZ(8,4,Dan);
1394   2              LCD_WriteHZ(24,4,Pian);
1395   2              LCD_WriteHZ(40,4,Jii);
1396   2              LCD_WriteHZ(56,4,Ke);
1397   2              LCD_WriteHZ(72,4,Cheng);
1398   2              LCD_WriteHZ(88,4,She);
1399   2              LCD_WriteHZ(104,4,Ji);
1400   2          Delay1s(1);
1401   2              InitLCD();                 //显示液晶点阵显示屏程序设计
1402   2              LCD_WriteHZ(32,2,Ye);
1403   2              LCD_WriteHZ(48,2,Jing);
1404   2              LCD_WriteHZ(64,2,Dian);
1405   2              LCD_WriteHZ(80,2,Zhen);
1406   2              LCD_WriteHZ(8,4,Xian);
1407   2              LCD_WriteHZ(24,4,Shi);
1408   2              LCD_WriteHZ(40,4,Ping);
1409   2              LCD_WriteHZ(56,4,Cheng);
1410   2              LCD_WriteHZ(72,4,Xu);
1411   2              LCD_WriteHZ(88,4,She);
1412   2              LCD_WriteHZ(104,4,Ji);
1413   2              Delay1s(1);
1414   2              }
1415   1      
1416   1                      for (i = 0; i < 127;i++)
1417   1                      {
1418   2                              InitLCD();                             //显示姓名班级学号
1419   2                              LCD_WriteHZ((4+128-i)%128,1,Xing);
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 24  

1420   2                              LCD_WriteHZ((20+128-i)%128,1,Ming);
1421   2                      LCD_WriteSZ((36+128-i)%128,1,Maohao);
1422   2                      LCD_WriteHZ((44+128-i)%128,1,Zeng);
1423   2                      //LCD_WriteHZ((60+128-i)%128,1,Hai);
1424   2                      LCD_WriteHZ((76+128-i)%128,1,Biao);
1425   2                              LCD_WriteHZ((4+128-i)%128,3,Ban);
1426   2                              LCD_WriteHZ((20+128-i)%128,3,Jiii);
1427   2                              LCD_WriteSZ((36+128-i)%128,3,Maohao);
1428   2                              LCD_WriteHZ((44+128-i)%128,3,Ji);
1429   2                              LCD_WriteHZ((60+128-i)%128,3,Suan);
1430   2                              LCD_WriteHZ((76+128-i)%128,3,Jii);
1431   2                              LCD_WriteSZ((92+128-i)%128,3,One); 
1432   2                              LCD_WriteSZ((100+128-i)%128,3,Three);
1433   2                              LCD_WriteSZ((108+128-i)%128,3,Zero); 
1434   2                              LCD_WriteSZ((116+128-i)%128,3,Two);
1435   2                              LCD_WriteHZ((4+128-i)%128,5,Xue);
1436   2                              LCD_WriteHZ((20+128-i)%128,5,Hao);
1437   2                              LCD_WriteSZ((36+128-i)%128,5,Maohao);
1438   2                              LCD_WriteSZ((44+128-i)%128,5,Three);
1439   2                              LCD_WriteSZ((52+128-i)%128,5,One);
1440   2                              LCD_WriteSZ((60+128-i)%128,5,Three);
1441   2                              LCD_WriteSZ((68+128-i)%128,5,Zero);
1442   2                              LCD_WriteSZ((76+128-i)%128,5,Six);
1443   2                              LCD_WriteSZ((84+128-i)%128,5,Zero);
1444   2                              LCD_WriteSZ((92+128-i)%128,5,Two);
1445   2                              LCD_WriteSZ((100+128-i)%128,5,Zero);
1446   2                              LCD_WriteSZ((108+128-i)%128,5,Five);
1447   2                              LCD_WriteSZ((116+128-i)%128,5,Zero);
1448   2                              Delay1ms(300);
1449   2                              
1450   2                      }
1451   1      }
1452          void zuoyouyi()//图片滚动
1453          { 
1454   1          InitLCD();
1455   1          DispBmp(screen3);
1456   1          Delay1s(1);
1457   1          Left(screen3);
1458   1          Delay1s(2);
1459   1          Right(screen3);
1460   1          Delay1s(2);
1461   1          Up(screen3);
1462   1          Delay1s(2);
1463   1          Down(screen3);
1464   1          Delay1s(2);
1465   1      }
1466          
1467          void caiji ()       //温度，电压，压力采集
1468          {
1469   1              char i;
1470   1      int st=8;
1471   1              unsigned int w;
1472   1              char No,buf[6];
1473   1              No=1;      
1474   1              w = GetADCValue(1);
1475   1              for (;;)        {
1476   2                      i=GetKeyValue();
1477   2                      if ((i>=0)&&(i<=3))//如果按键大于3，则不读入键值
1478   2                              No=i;
1479   2                      Delay1ms(250);
1480   2                      buf[0]= No;
1481   2                      buf[1]= ' ';
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 25  

1482   2                      buf[2]=(w%10000)/1000;
1483   2                      buf[3]=(w%1000)/100;
1484   2                      buf[4]=(w%100)/10;
1485   2                      buf[5]=(w%10);
1486   2                      if (No==1)
1487   2                      {
1488   3                              InitLCD();
1489   3                              DispBmp(tem);//按1采集到温度
1490   3                              Display(buf,4,st+30,4);
1491   3                              LCD_WriteHZ(st+102,4,du);
1492   3                      }
1493   2                      else if (No==2)
1494   2                      {
1495   3                              InitLCD();
1496   3                              DispBmp(volte);//按2采集到电压
1497   3                              Display(buf,3,st+30,4);
1498   3                                      LCD_WriteSZ(st+102,4,dianya);
1499   3                      }                               
1500   2                      else if (No==3)
1501   2                      {       
1502   3                              InitLCD();
1503   3                              DispBmp(pres);//按3采集到压力
1504   3                              Display(buf,4,st+30,4);
1505   3                                      LCD_WriteSZ(st+102,4,yali);
1506   3                      }
1507   2                      else
1508   2                         break;//按0回到主菜单                                
1509   2                      w = GetADCValue(No);
1510   2              }
1511   1      }
1512          
1513          char nian1,nian2,nian3,nian4,yue1,yue2,ri1,ri2;
1514          char shih,shil,fenh,fenl,miaoh,miaol,haoh,haol;
1515          
1516          //void showMiaobiao(char shih,char shil,char fenh,char fenl,char miaoh,char miaol,char haoh,char haol)
1517          void showMiaobiao(int cas)
1518          {
1519   1              char mm=3;//日期起始行
1520   1              char m=mm+2;//秒表数字的起始行
1521   1              char hs=32;//秒表时分秒的起始列
1522   1              char hss=8;//秒表年月日的起始列
1523   1      //      InitLCD();              //
1524   1              if(cas==2)
1525   1                      DispBmp(miaobiaoModify);//
1526   1              else
1527   1                      DispBmp(miaobiaoCaidan);
1528   1      
1529   1      
1530   1              WriteSZ(hss,mm,nian1); 
1531   1              WriteSZ(hss+8,mm,nian2); 
1532   1              WriteSZ(hss+16,mm,nian3); 
1533   1              WriteSZ(hss+24,mm,nian4); 
1534   1              LCD_WriteHZ(hss+32,mm,Nian);
1535   1              WriteSZ(hss+48,mm,yue1); 
1536   1              WriteSZ(hss+56,mm,yue2); 
1537   1              LCD_WriteHZ(hss+64,mm,Yue);
1538   1              WriteSZ(hss+80,mm,ri1); 
1539   1              WriteSZ(hss+88,mm,ri2); 
1540   1              LCD_WriteHZ(hss+96,mm,Ri);
1541   1      
1542   1      
1543   1              WriteSZ(hs,m,shih); 
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 26  

1544   1              WriteSZ(hs+8,m,shil); 
1545   1              LCD_WriteSZ(hs+16,m,Maohao); 
1546   1              WriteSZ(hs+24,m,fenh); 
1547   1              WriteSZ(hs+32,m,fenl); 
1548   1              LCD_WriteSZ(hs+40,m,Maohao); 
1549   1              WriteSZ(hs+48,m,miaoh); 
1550   1              WriteSZ(hs+56,m,miaol);
1551   1      //      LCD_WriteSZ(hs+64,m,Maohao);  
1552   1      //      WriteSZ(hs+72,m,haoh); 
1553   1      //      WriteSZ(hs+80,m,haol); 
1554   1      
1555   1      }
1556          
1557          void refresh(){
1558   1      
1559   1      if(nian1>9)
1560   1              nian1=9;
1561   1              if(nian2>9)
1562   1              nian2=9;
1563   1              if(nian3>9)
1564   1              nian3=9;
1565   1              if(nian4>9)
1566   1              nian4=9;
1567   1      
1568   1      if(yue1>1)
1569   1              yue1=1;
1570   1      if(yue1==0&&yue2>9)
1571   1      yue2=9;
1572   1      if(yue1==0&&yue2==0)
1573   1      yue2=1;
1574   1      if(yue1==1&&yue2>2)
1575   1      yue2=2;
1576   1      if ((((yue1 == 0) && ((yue2 == 1) || (yue2 == 3) || (yue2 == 5) || (yue2 == 7) || (yue2 == 8))) || ((yue1 
             -== 1) && ((yue2 == 0) || (yue2 == 2))))){
1577   2      if(ri1>3)
1578   2      ri1=3;
1579   2      if(ri2>9)
1580   2      ri2=0;
1581   2      if(ri1==0&&ri2==0)
1582   2      ri2=1;
1583   2      if(ri1==3&&ri2>1)
1584   2      ri2=1;
1585   2      }
1586   1      if ((((yue1 == 0) && ((yue2 == 4) || (yue2 == 6) || (yue2 == 9) )) || ((yue1 == 1) && ((yue2 == 1) )))){//
             -30天
1587   2      if(ri1>3)
1588   2      ri1=3;
1589   2      if(ri2>9)
1590   2      ri2=0;
1591   2      if(ri1==0&&ri2==0)
1592   2      ri2=1;
1593   2      if(ri1==3&&ri2>0)
1594   2      ri2=0;
1595   2      }
1596   1      if (((yue1==0)&&(yue2==2))){//28天
1597   2      if(ri1>2)
1598   2      ri1=2;
1599   2      if(ri2>9)
1600   2      ri2=0;
1601   2      if(ri1==0&&ri2==0)
1602   2      ri2=1;
1603   2      if(ri1==2&&ri2>8)
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 27  

1604   2      ri2=8;
1605   2      }
1606   1      
1607   1      if(shih>2)
1608   1      shih=2;
1609   1      if(shih==2&&shil>3)
1610   1      shil=3;
1611   1      if(shil>9)
1612   1      shil=0;
1613   1      if(fenh>5)
1614   1      fenh=0;
1615   1      if(fenl>9)
1616   1      fenl=0;
1617   1      if(miaoh>5)
1618   1      miaoh=0;
1619   1      if(miaol>9)
1620   1      miaol=0;
1621   1      
1622   1      }
1623          
1624          void modifyTime(){
1625   1      
1626   1              char mm=3;//日期起始行
1627   1              char m=mm+2;//秒表数字的起始行
1628   1              char hs=32;//秒表时分秒的起始列
1629   1              char hss=8;//秒表年月日的起始列
1630   1              int j=0;
1631   1              char i;
1632   1              showMiaobiao(2);
1633   1      //      LCD_WriteSZ(hss,mm,Line); 
1634   1              for (;;)        {
1635   2                      i=GetKeyValue();
1636   2      
1637   2      if(i==-1){
1638   3                      if(j==0){
1639   4                      LCD_WriteSZ(hss+0,mm,Line); }
1640   3                      else if(j==1){
1641   4                      LCD_WriteSZ(hss+8,mm,Line); }
1642   3                      else if(j==2){
1643   4                      LCD_WriteSZ(hss+16,mm,Line); }
1644   3                      else if(j==3){
1645   4                      LCD_WriteSZ(hss+24,mm,Line); }
1646   3                      else if(j==4){
1647   4                      LCD_WriteSZ(hss+48,mm,Line); }
1648   3                      else if(j==5){
1649   4                      LCD_WriteSZ(hss+56,mm,Line); }
1650   3                      else if(j==6){
1651   4                      LCD_WriteSZ(hss+80,mm,Line); }
1652   3      
1653   3                      else if(j==7){
1654   4                      LCD_WriteSZ(hss+88,mm,Line);}
1655   3                      else if(j==8){
1656   4                      LCD_WriteSZ(hs,m,Line); }
1657   3                      else if(j==9){
1658   4                      LCD_WriteSZ(hs+8,m,Line); }
1659   3                      else if(j==10){
1660   4                      LCD_WriteSZ(hs+24,m,Line); }
1661   3                      else if(j==11){
1662   4                      LCD_WriteSZ(hs+32,m,Line); }
1663   3                      else if(j==12){
1664   4                      LCD_WriteSZ(hs+48,m,Line); }
1665   3                      else if(j==13){
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 28  

1666   4                      LCD_WriteSZ(hs+56,m,Line); }
1667   3      
1668   3                      Delay1ms(300);
1669   3                      showMiaobiao(2);
1670   3      }
1671   2      
1672   2      
1673   2                      if(i!=-1)
1674   2                {
1675   3                         // Send7279Byte(0xC8);       //发送键码值，按方式1译码下载显示 
1676   3                       //   Send7279Byte(KeyValue%16);
1677   3                        //   NOSELECT7279;            //置CS高电平 
1678   3                          WaitKeyOff();
1679   3                 
1680   3      
1681   3              //      if ((i>=0)&&(i<=9))//
1682   3      
1683   3      //      shih,shil,fenh,fenl,miaoh,miaol,haoh,haol;
1684   3      
1685   3      
1686   3      
1687   3                      if(j==0){
1688   4                      nian1=i;
1689   4              //      WriteSZ(hss,mm,i); 
1690   4                      j++;
1691   4                      LCD_WriteSZ(hss+8,mm,Line); }
1692   3      
1693   3                      else if(j==1){
1694   4                      nian2=i;
1695   4              //      WriteSZ(hss+8,mm,i); 
1696   4                      j++;
1697   4                      LCD_WriteSZ(hss+16,mm,Line); }
1698   3      
1699   3                      else if(j==2){
1700   4                      nian3=i;
1701   4              //      WriteSZ(hss+16,mm,i); 
1702   4                      j++;
1703   4                      LCD_WriteSZ(hss+24,mm,Line); }
1704   3      
1705   3                      else if(j==3){
1706   4                      nian4=i;
1707   4              //      WriteSZ(hss+24,mm,i); 
1708   4                      j++;
1709   4                      LCD_WriteSZ(hss+48,mm,Line); }
1710   3      
1711   3      
1712   3                      else if(j==4){
1713   4                      yue1=i;
1714   4              //      WriteSZ(hss+48,mm,i); 
1715   4                      j++;
1716   4                      LCD_WriteSZ(hss+56,mm,Line); }
1717   3      
1718   3                      else if(j==5){
1719   4                      yue2=i;
1720   4              //      WriteSZ(hss+56,mm,i); 
1721   4                      j++;
1722   4                      LCD_WriteSZ(hss+80,mm,Line); }
1723   3      
1724   3                      else if(j==6){
1725   4                      ri1=i;
1726   4              //      WriteSZ(hss+80,mm,i); 
1727   4                      j++;
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 29  

1728   4                      LCD_WriteSZ(hss+88,mm,Line); }
1729   3      
1730   3                      else if(j==7){
1731   4                      ri2=i;
1732   4              //      WriteSZ(hss+88,mm,i); 
1733   4                      j++;
1734   4                      LCD_WriteSZ(hs,m,Line); }
1735   3      
1736   3      
1737   3      
1738   3                      else if(j==8){
1739   4                      shih=i;
1740   4              //      WriteSZ(hs,m,i); 
1741   4                      j++;
1742   4                      LCD_WriteSZ(hs+8,m,Line); }
1743   3      
1744   3      
1745   3                      else if(j==9){
1746   4                      shil=i;
1747   4              //      WriteSZ(hs+8,m,i); 
1748   4                      j++;
1749   4                      LCD_WriteSZ(hs+24,m,Line); }
1750   3      
1751   3                      else if(j==10){
1752   4                      fenh=i;
1753   4              //      WriteSZ(hs+24,m,i); 
1754   4                      j++;
1755   4                      LCD_WriteSZ(hs+32,m,Line); }
1756   3      
1757   3                      else if(j==11){
1758   4                      fenl=i;
1759   4              //      WriteSZ(hs+32,m,i); 
1760   4                      j++;
1761   4                      LCD_WriteSZ(hs+48,m,Line); }
1762   3      
1763   3                      else if(j==12){
1764   4                      miaoh=i;
1765   4              //      WriteSZ(hs+48,m,i); 
1766   4                      j++;
1767   4                      LCD_WriteSZ(hs+56,m,Line); }
1768   3      
1769   3                      else if(j==13){
1770   4                      miaol=i;
1771   4                      refresh();
1772   4                      showMiaobiao(1);
1773   4              //      WriteSZ(hs+56,m,i); 
1774   4                      break;}
1775   3      
1776   3                      refresh();
1777   3                      showMiaobiao(2);
1778   3      
1779   3      }                       
1780   2      
1781   2                              }
1782   1      
1783   1      }
1784          
1785          void miaobiao()//秒表
1786                  {
1787   1      
1788   1      
1789   1              char i;
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 30  

1790   1              int pause=0;
1791   1              int No;
1792   1              
1793   1              shih=0; shil=0;fenh=0;fenl=0;miaoh=0;miaol=0;haoh=0;haol=0;
1794   1              nian1=2,nian2=0,nian3=1,nian4=6,yue1=0,yue2=7,ri1=0,ri2=1;
1795   1          
1796   1      //      unsigned int w;
1797   1      //      char No,buf[6];
1798   1              No=7;      
1799   1      //      w = GetADCValue(1);
1800   1      
1801   1      //showMiaobiao(shih,shil,fenh,fenl,miaoh,miaol,haoh,haol);
1802   1      showMiaobiao(1);
1803   1              for (;;)        {
1804   2                      i=GetKeyValue();
1805   2                      if(i!=-1)
1806   2                          WaitKeyOff();
1807   2                      if ((i>=0)&&(i<=4))//如果按键大于2，则不读入键值
1808   2                              No=i;
1809   2                      else
1810   2                              No=7;
1811   2              //      Delay1ms(250);
1812   2              /*      buf[0]= No;
1813   2                      buf[1]= ' ';
1814   2                      buf[2]=(w%10000)/1000;
1815   2                      buf[3]=(w%1000)/100;
1816   2                      buf[4]=(w%100)/10;
1817   2                      buf[5]=(w%10);*/
1818   2                      if (No==1)//开始
1819   2                      {
1820   3      
1821   3                      //      InitLCD();
1822   3      
1823   3                      //      if(pause==0)
1824   3                                      pause=1;
1825   3                      //      else
1826   3                      //              pause=0;
1827   3      
1828   3                      //      DispBmp(tem);//按1采集到温度
1829   3                      //      Display(buf,4,30,4);
1830   3                      //      LCD_WriteHZ(102,4,du);
1831   3                      }
1832   2                      else if (No==3)//清0
1833   2                      {
1834   3      
1835   3                      //      InitLCD();
1836   3      
1837   3                              shih=0; shil=0;fenh=0;fenl=0;miaoh=0;miaol=0;haoh=0;haol=0;
1838   3                              nian1=2,nian2=0,nian3=1,nian4=6,yue1=0,yue2=7,ri1=0,ri2=1;
1839   3                              showMiaobiao(1);
1840   3                              pause=0;
1841   3      
1842   3      
1843   3                      //      DispBmp(volte);//按2采集到电压
1844   3                      //      Display(buf,3,30,4);
1845   3                      //              LCD_WriteSZ(102,4,dianya);
1846   3                      }                               
1847   2                      else if (No==0)//返回
1848   2                      {       pause=0;
1849   3                              break;//按0回到主菜单
1850   3                      }
1851   2                      else if (No==2)//暂停
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 31  

1852   2                      {       pause=0;
1853   3                      //      break;
1854   3                      }
1855   2                      else if (No==4)//修改时间
1856   2                      {       //pause=0;
1857   3                              modifyTime();
1858   3                      //      break;
1859   3                      }
1860   2      
1861   2                      if(pause==1)
1862   2                      {
1863   3              //      Delay1ms(1);
1864   3                      Delay1s(1);
1865   3                      miaol++;
1866   3                      if(miaol==10){
1867   4                      miaol=0;
1868   4                      miaoh++;}
1869   3                      if(miaoh==6){
1870   4                      miaoh=0;
1871   4                      fenl++;}
1872   3                      if(fenl==10){
1873   4                      fenl=0;
1874   4                      fenh++;}
1875   3                      if(fenh==6){
1876   4                      fenh=0;
1877   4                      shil++;}
1878   3                      if(((shih==0)||(shih==1))&&(shil==10)){
1879   4                      shil=0;
1880   4                      shih++;}
1881   3                      if(shih==2&&shil==4){
1882   4                      shih=0; shil=0;
1883   4                      ri2++;}
1884   3      
1885   3                      if(((ri1==0)||(ri1==1)||(!((yue1==0)&&(yue2==2))))&&(ri2==10)){
1886   4                      ri2=0;
1887   4                      ri1++;}
1888   3                      if ((((yue1 == 0) && ((yue2 == 1) || (yue2 == 3) || (yue2 == 5) || (yue2 == 7) || (yue2 == 8))) || ((yue
             -1 == 1) && ((yue2 == 0) || (yue2 == 2))))&&(ri1==3&&ri2==2)){//31天
1889   4                      ri1=0;  ri2=1;
1890   4                      yue2++;}
1891   3                      if ((((yue1 == 0) && ((yue2 == 4) || (yue2 == 6) || (yue2 == 9) )) || ((yue1 == 1) && ((yue2 == 1) )))&&
             -(ri1==3&&ri2==1)){//30天
1892   4                      ri1=0;  ri2=1;
1893   4                      yue2++;}
1894   3                      if (((yue1==0)&&(yue2==2))&&(ri1==2&&ri2==9)){//28天
1895   4                      ri1=0;  ri2=1;
1896   4                      yue2++;}
1897   3      
1898   3                      if(yue1==0&&yue2==10){
1899   4                      yue2=0;yue1++;}
1900   3                      if(yue1==1&&yue2==13){
1901   4                      yue1=0;yue2=1;nian4++;}
1902   3      
1903   3                      if(nian4==10){
1904   4                      nian4=0;nian3++;}
1905   3                      if(nian3==10){
1906   4                      nian3=0;nian2++;}
1907   3                      if(nian2==10){
1908   4                      nian2=0;nian1++;}
1909   3                      if(nian1==10){
1910   4                      nian1=0;}
1911   3                              
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 32  

1912   3      
1913   3      
1914   3                      showMiaobiao(1);
1915   3      
1916   3                      }
1917   2      
1918   2              //      else
1919   2                      //   break;//按0回到主菜单                              
1920   2              //      w = GetADCValue(No);
1921   2      
1922   2              }
1923   1      
1924   1      //char a1,a2,b1,b2,c1,c2,c3;
1925   1      
1926   1      
1927   1      }
1928          
1929          
1930          /*
1931          void shownum(char x,char y,char num){
1932               char i;
1933                  for (i=0;i<32;i++){     
1934                          if ((x+i%16)<64)
1935                          {
1936                                  LCD_WriteCommand1(0xB8+y+i/16);
1937                                  LCD_WriteCommand1(0x40+x+i%16);
1938                                  LCD_WriteData1(shu[32*num+i]);
1939                          }
1940                          else
1941                          {
1942                                  LCD_WriteCommand2(0xB8+y+i/16);
1943                                  LCD_WriteCommand2(0x40+x-64+i%16);
1944                                  LCD_WriteData2(shu[32*num+i]);
1945                          }
1946                  }
1947          }
1948          
1949          */
1950          
1951          
1952          void calc(){  //计算器的实现
1953   1          char i;
1954   1          char flag;
1955   1              int numWid=8;//数字宽度
1956   1              char st=4;//算式起始行
1957   1              char buf[10];
1958   1              int ff;
1959   1          int s1,s2,num1,num2;  // s1、s2表示操作数的位数，num1、num2表示两个操作数
1960   1              DispBmp(calcMenu);
1961   1          for(;;){
1962   2                 num1=0;
1963   2                 num2=0;
1964   2                 ff=0;
1965   2                 InitLCD();
1966   2                DispBmp(calcMenu);
1967   2             for(s1=0;s1<7;s1++){
1968   3                do{
1969   4                    i=GetKeyValue();
1970   4                }while(i==-1);
1971   3                        WaitKeyOff();
1972   3                       // if((s1==6)&&())
1973   3                if(i>=0&&i<=9&&s1!=6){
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 33  

1974   4                           WriteSZ(s1*numWid,st,i);
1975   4                               num1 = num1*10+i;
1976   4                        }
1977   3                else if((i==0x0a || i==0x0b || i==0x0c || i==0x0d)&&(s1!=0)){  //加减乘除的选择按键
1978   4                           flag=i;
1979   4                           switch(flag){
1980   5                     case 0x0a: LCD_WriteHZ(s1*numWid,st,fu);break;  //加
1981   5                                 case 0x0b: LCD_WriteHZ(s1*numWid,st,fu+32);break;  //减
1982   5                                 case 0x0c: LCD_WriteHZ(s1*numWid,st,fu+32*2);break;  //乘
1983   5                                 case 0x0d: LCD_WriteHZ(s1*numWid,st,fu+32*3);break;   //除
1984   5                               }
1985   4                               break;
1986   4                }
1987   3                        else if(i==0x0f)
1988   3                              goto exitt;
1989   3                        else if((i>=0&&i<=9)&&s1==6){
1990   4                              flag=0x0a;
1991   4                              LCD_WriteHZ(s1*numWid,st,fu);
1992   4                              break;
1993   4                        }
1994   3                        else if((i==0x0a || i==0x0b || i==0x0c || i==0x0d|| i==0x0e)&&(s1==0))//一开始输入符号
1995   3                              goto exitt;//
1996   3             }
1997   2             for(s2=0;s2<7;s2++){
1998   3                do{
1999   4                    i=GetKeyValue();
2000   4                }while(i==-1);
2001   3                        WaitKeyOff();
2002   3                if(i>=0&&i<=9&&s2!=6){
2003   4                           s1++;
2004   4                           WriteSZ(s1*numWid+8,st,i);
2005   4                               num2 = num2*10+i;
2006   4                        }
2007   3                else if(i==0x0e&&(s2!=0)){
2008   4                           s1++;
2009   4                           LCD_WriteHZ(0,st+2,fu+32*4);
2010   4                   break;
2011   4                }
2012   3                        else if(i==0x0f)
2013   3                              goto exitt;
2014   3                        else if((i>=0&&i<=9)&&s2==6){
2015   4                        //    flag=0x0a;
2016   4                              LCD_WriteHZ(0,st+2,fu+32*4);
2017   4                        }
2018   3                        else if(i==0x0e&&(s2==0)){
2019   4                           LCD_WriteHZ(s1*numWid,st,Kong);
2020   4                           LCD_WriteHZ(0,st+2,fu+32*4);
2021   4                  goto nextt;
2022   4                }
2023   3             }
2024   2             switch(flag){
2025   3                case 0x0a: num1=num1+num2;break;
2026   3                        case 0x0b: num1=num1-num2;break;
2027   3                        case 0x0c: num1=num1*num2;break;                
2028   3                        case 0x0d: num1=num1/num2;
2029   3                        if(num2==0)
2030   3                        goto exitt;break;
2031   3             }
2032   2      nextt:    if(num1<0){
2033   3                              LCD_WriteSZ(16,st+2,Jian);
2034   3                              num1=-num1;     
2035   3                              ff=1;           
C51 COMPILER V8.08   KS0108                                                                07/06/2016 22:32:25 PAGE 34  

2036   3                              }
2037   2                       for(s1=0;num1!=0;s1++){
2038   3                    buf[s1]=num1%10;
2039   3                        num1=num1/10;
2040   3                 }
2041   2                 for(s2=0;s2<s1;s2++){
2042   3                      if(ff==0)
2043   3                    WriteSZ(s2*numWid+16,st+2,buf[s1-1-s2]);
2044   3                      else
2045   3                        WriteSZ(s2*numWid+16+8,st+2,buf[s1-1-s2]);
2046   3                 }
2047   2                 do{
2048   3                 i=GetKeyValue();
2049   3                }while(i==-1);
2050   2                      WaitKeyOff();
2051   2                      s2++;
2052   2      exitt:  if(i==0x0f){
2053   3                      
2054   3                      break;}
2055   2          }}
2056          
2057          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7436    ----
   CONSTANT SIZE    =   9840    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16     124
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
